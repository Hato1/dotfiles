# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="doubleend"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="%Y/%m/%d %H:%M"
export HISTFILE=~/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_ALL_DUPS
alias hgrep="history 0 | grep "

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git virtualenv)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

autoload zmv
alias zcp="zmv -C"
alias zln="zmv -L"

export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}$ 
export LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

### Aliases ###

# Docker aliases
# Run a container in interactive mode, with a terminal attached, appropriate signal
# handling, and the timezone set, and then clean it up afterwards
alias dri='docker run --rm --interactive --tty --init --env TZ=Pacific/Auckland'
# Also mount the current working directory into the container as /working
# N.B. this must use single quotes!
alias driw='dri -v $(pwd):/working'
# Also pass in GPUs
alias drig='dri --gpus=all'
# Both (mnemonic docker run interactive seeo)
alias dris='dri -v $(pwd):/working --gpus=all'

alias dco="docker compose"

alias dps='docker ps --format "table {{.Names}}\t {{.Image}}\t{{.Status}}\t{{.RunningFor}}"'


# Misc aliases
alias open=xdg-open
alias seeo="cd ~/Software/seeo/fake_proximity/ && poetry shell"
# Docker ps formatting
alias dps='docker ps --format "table {{.Names}}\t {{.Image}}\t{{.Status}}\t{{.RunningFor}}"'
#Cron aliases
alias cron-stop='sudo /etc/init.d/cron stop'
alias cron-start='sudo /etc/init.d/cron start'

fix-videos() {
    for file in "$@"; do
        extension="${file##*.}"
        if [[ "$extension" == "avi" || "$extension" == "mkv" ]]; then
            filename=$(basename "$file")
            echo "Fixing file: $file"
            ffmpeg -i "$file" -c copy -map 0 -y /tmp/"$filename" && mv -f /tmp/"$filename" "$file"
        else
            echo "Ignoring file (not .avi or .mkv): $extension"
        fi
    done
}

dual-video() {
    mpv --lavfi-complex="[vid1][vid2]hstack[vo]" $1 --external-file=$2
}

dual-video2() {
    ffmpeg -i $1 -i $2 -filter_complex "[0:v]scale=640:640,setsar=1[l];[1:v]scale=640:640,setsar=1[r];[l][r]hstack;[0][1]amix" -vsync 0 output.mp4
}

